<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.VideoLearningRecordMapper">
    
    <resultMap type="VideoLearningRecord" id="VideoLearningRecordResult">
        <result property="recordId"    column="record_id"    />
        <result property="learningRecordId"    column="learning_record_id"    />
        <result property="resourceId"    column="resource_id"    />
        <result property="totalDuration"    column="total_duration"    />
        <result property="watchedDuration"    column="watched_duration"    />
        <result property="skipSegments"    column="skip_segments"    />
        <result property="repeatSegments"    column="repeat_segments"    />
        <result property="completionRate"    column="completion_rate"    />
        <result property="lastWatchTime"    column="last_watch_time"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
        <result property="studentName"    column="student_name"    />
        <result property="studentAvatar"    column="student_avatar"    />
        <result property="resourceName"    column="resource_name"    />
        <result property="resourceCategory"    column="resource_category"    />
        <result property="courseName"    column="course_name"    />
    </resultMap>

    <sql id="selectVideoLearningRecordVo">
        select vlr.*, su.user_name as student_name, su.avatar as student_avatar, vr.video_name as resource_name, vr.video_type as resource_category, c.course_name
        from video_learning_record vlr
        left join learning_record lr on lr.record_id = vlr.learning_record_id
        left join sys_user su on su.user_id = lr.user_id
        left join video_resource vr on vr.video_id = vlr.resource_id
        left join course c on c.course_id = vr.course_id
    </sql>

    <select id="selectVideoLearningRecordList" parameterType="VideoLearningRecord" resultMap="VideoLearningRecordResult">
        <include refid="selectVideoLearningRecordVo"/>
        <where>  
            <if test="learningRecordId != null "> and vlr.learning_record_id = #{learningRecordId}</if>
            <if test="resourceId != null "> and vlr.resource_id = #{resourceId}</if>
            <if test="totalDuration != null "> and vlr.total_duration = #{totalDuration}</if>
            <if test="watchedDuration != null "> and vlr.watched_duration = #{watchedDuration}</if>
            <if test="skipSegments != null  and skipSegments != ''"> and vlr.skip_segments = #{skipSegments}</if>
            <if test="repeatSegments != null  and repeatSegments != ''"> and vlr.repeat_segments = #{repeatSegments}</if>
            <if test="completionRate != null "> and vlr.completion_rate = #{completionRate}</if>
            <if test="lastWatchTime != null "> and vlr.last_watch_time = #{lastWatchTime}</if>
            <if test="userId != null "> and exists (select 1 from learning_record lr_sub where lr_sub.record_id = vlr.learning_record_id and lr_sub.user_id = #{userId})</if>
            <!-- 按学生姓名模糊查询 -->
            <if test="studentName != null and studentName != ''"> and su.user_name like concat('%', #{studentName}, '%')</if>
            <!-- 按资源名称模糊查询 -->
            <if test="resourceName != null and resourceName != ''"> and vr.video_name like concat('%', #{resourceName}, '%')</if>
            <!-- 完成率区间查询 -->
            <if test="completionRateStart != null"> and vlr.completion_rate &gt;= #{completionRateStart}</if>
            <if test="completionRateEnd != null"> and vlr.completion_rate &lt;= #{completionRateEnd}</if>
            <!-- 完成状态查询 -->
            <if test="completionStatus != null and completionStatus != ''">
                <choose>
                    <when test="completionStatus == 'not_started'">
                        and (vlr.completion_rate = 0 or vlr.completion_rate is null)
                    </when>
                    <when test="completionStatus == 'in_progress'">
                        and vlr.completion_rate > 0 and vlr.completion_rate &lt; 80
                    </when>
                    <when test="completionStatus == 'completed'">
                        and vlr.completion_rate >= 100
                    </when>
                    <when test="completionStatus == 'paused'">
                        and vlr.completion_rate >= 80 and vlr.completion_rate &lt; 100
                    </when>
                </choose>
            </if>
            <!-- 观看时间范围(使用 BaseEntity params) -->
            <if test="params != null and params.beginTime != null and params.beginTime != ''"> and DATE(vlr.last_watch_time) &gt;= #{params.beginTime}</if>
            <if test="params != null and params.endTime != null and params.endTime != ''"> and DATE(vlr.last_watch_time) &lt;= #{params.endTime}</if>
        </where>
    </select>
    
    <select id="selectVideoLearningRecordByRecordId" parameterType="Long" resultMap="VideoLearningRecordResult">
        <include refid="selectVideoLearningRecordVo"/>
        where vlr.record_id = #{recordId}
    </select>

    <insert id="insertVideoLearningRecord" parameterType="VideoLearningRecord" useGeneratedKeys="true" keyProperty="recordId">
        insert into video_learning_record
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="learningRecordId != null">learning_record_id,</if>
            <if test="resourceId != null">resource_id,</if>
            <if test="totalDuration != null">total_duration,</if>
            <if test="watchedDuration != null">watched_duration,</if>
            <if test="skipSegments != null">skip_segments,</if>
            <if test="repeatSegments != null">repeat_segments,</if>
            <if test="completionRate != null">completion_rate,</if>
            <if test="lastWatchTime != null">last_watch_time,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="learningRecordId != null">#{learningRecordId},</if>
            <if test="resourceId != null">#{resourceId},</if>
            <if test="totalDuration != null">#{totalDuration},</if>
            <if test="watchedDuration != null">#{watchedDuration},</if>
            <if test="skipSegments != null">#{skipSegments},</if>
            <if test="repeatSegments != null">#{repeatSegments},</if>
            <if test="completionRate != null">#{completionRate},</if>
            <if test="lastWatchTime != null">#{lastWatchTime},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateVideoLearningRecord" parameterType="VideoLearningRecord">
        update video_learning_record
        <trim prefix="SET" suffixOverrides=",">
            <if test="learningRecordId != null">learning_record_id = #{learningRecordId},</if>
            <if test="resourceId != null">resource_id = #{resourceId},</if>
            <if test="totalDuration != null">total_duration = #{totalDuration},</if>
            <if test="watchedDuration != null">watched_duration = #{watchedDuration},</if>
            <if test="skipSegments != null">skip_segments = #{skipSegments},</if>
            <if test="repeatSegments != null">repeat_segments = #{repeatSegments},</if>
            <if test="completionRate != null">completion_rate = #{completionRate},</if>
            last_watch_time = #{lastWatchTime},
            update_time = sysdate()
        </trim>
        where record_id = #{recordId}
    </update>

    <delete id="deleteVideoLearningRecordByRecordId" parameterType="Long">
        delete from video_learning_record where record_id = #{recordId}
    </delete>

    <delete id="deleteVideoLearningRecordByRecordIds" parameterType="String">
        delete from video_learning_record where record_id in 
        <foreach item="recordId" collection="array" open="(" separator="," close=")">
            #{recordId}
        </foreach>
    </delete>

    <!-- 根据学习记录ID和资源ID查询 -->
    <select id="selectByLearningAndResourceId" resultMap="VideoLearningRecordResult">
        <include refid="selectVideoLearningRecordVo"/>
        where vlr.learning_record_id = #{learningRecordId} and vlr.resource_id = #{resourceId}
    </select>

    <!-- 根据学习记录ID和资源ID查询（新增方法） -->
    <select id="selectByLearningRecordIdAndResourceId" resultMap="VideoLearningRecordResult">
        <include refid="selectVideoLearningRecordVo"/>
        where vlr.learning_record_id = #{learningRecordId} and vlr.resource_id = #{resourceId}
    </select>
</mapper>