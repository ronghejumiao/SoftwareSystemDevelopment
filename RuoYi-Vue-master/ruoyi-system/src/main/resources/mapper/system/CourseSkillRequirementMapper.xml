<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.CourseSkillRequirementMapper">
    
    <resultMap type="CourseSkillRequirement" id="CourseSkillRequirementResult">
        <result property="requirementId"    column="requirement_id"    />
        <result property="courseId"    column="course_id"    />
        <result property="skillName"    column="skill_name"    />
        <result property="skillLevel"    column="skill_level"    />
        <result property="requiredScore"    column="required_score"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectCourseSkillRequirementVo">
        select requirement_id, course_id, skill_name, skill_level, required_score, create_time, update_time from course_skill_requirement
    </sql>

    <select id="selectCourseSkillRequirementList" parameterType="CourseSkillRequirement" resultMap="CourseSkillRequirementResult">
        <include refid="selectCourseSkillRequirementVo"/>
        <where>  
            <if test="courseId != null "> and course_id = #{courseId}</if>
            <if test="skillName != null  and skillName != ''"> and skill_name like concat('%', #{skillName}, '%')</if>
            <if test="skillLevel != null "> and skill_level = #{skillLevel}</if>
            <if test="requiredScore != null "> and required_score = #{requiredScore}</if>
        </where>
    </select>
    
    <select id="selectCourseSkillRequirementByRequirementId" parameterType="Long" resultMap="CourseSkillRequirementResult">
        <include refid="selectCourseSkillRequirementVo"/>
        where requirement_id = #{requirementId}
    </select>

    <insert id="insertCourseSkillRequirement" parameterType="CourseSkillRequirement" useGeneratedKeys="true" keyProperty="requirementId">
        insert into course_skill_requirement
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="courseId != null">course_id,</if>
            <if test="skillName != null and skillName != ''">skill_name,</if>
            <if test="skillLevel != null">skill_level,</if>
            <if test="requiredScore != null">required_score,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="courseId != null">#{courseId},</if>
            <if test="skillName != null and skillName != ''">#{skillName},</if>
            <if test="skillLevel != null">#{skillLevel},</if>
            <if test="requiredScore != null">#{requiredScore},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateCourseSkillRequirement" parameterType="CourseSkillRequirement">
        update course_skill_requirement
        <trim prefix="SET" suffixOverrides=",">
            <if test="courseId != null">course_id = #{courseId},</if>
            <if test="skillName != null and skillName != ''">skill_name = #{skillName},</if>
            <if test="skillLevel != null">skill_level = #{skillLevel},</if>
            <if test="requiredScore != null">required_score = #{requiredScore},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where requirement_id = #{requirementId}
    </update>

    <delete id="deleteCourseSkillRequirementByRequirementId" parameterType="Long">
        delete from course_skill_requirement where requirement_id = #{requirementId}
    </delete>

    <delete id="deleteCourseSkillRequirementByRequirementIds" parameterType="String">
        delete from course_skill_requirement where requirement_id in 
        <foreach item="requirementId" collection="array" open="(" separator="," close=")">
            #{requirementId}
        </foreach>
    </delete>
</mapper>