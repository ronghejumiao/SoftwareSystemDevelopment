<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.QuestionBankMapper">
    
    <resultMap type="QuestionBank" id="QuestionBankResult">
        <result property="bankId"    column="bank_id"    />
        <result property="courseId"    column="course_id"    />
        <result property="bankName"    column="bank_name"    />
        <result property="bankDesc"    column="bank_desc"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectQuestionBankVo">
        select bank_id, course_id, bank_name, bank_desc, create_time, update_time from question_bank
    </sql>

    <select id="selectQuestionBankList" parameterType="QuestionBank" resultMap="QuestionBankResult">
        <include refid="selectQuestionBankVo"/>
        <where>  
            <if test="courseId != null "> and course_id = #{courseId}</if>
            <if test="bankName != null  and bankName != ''"> and bank_name like concat('%', #{bankName}, '%')</if>
            <if test="bankDesc != null  and bankDesc != ''"> and bank_desc = #{bankDesc}</if>
        </where>
    </select>
    
    <select id="selectQuestionBankByBankId" parameterType="Long" resultMap="QuestionBankResult">
        <include refid="selectQuestionBankVo"/>
        where bank_id = #{bankId}
    </select>

    <insert id="insertQuestionBank" parameterType="QuestionBank" useGeneratedKeys="true" keyProperty="bankId">
        insert into question_bank
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="courseId != null">course_id,</if>
            <if test="bankName != null and bankName != ''">bank_name,</if>
            <if test="bankDesc != null">bank_desc,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="courseId != null">#{courseId},</if>
            <if test="bankName != null and bankName != ''">#{bankName},</if>
            <if test="bankDesc != null">#{bankDesc},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateQuestionBank" parameterType="QuestionBank">
        update question_bank
        <trim prefix="SET" suffixOverrides=",">
            <if test="courseId != null">course_id = #{courseId},</if>
            <if test="bankName != null and bankName != ''">bank_name = #{bankName},</if>
            <if test="bankDesc != null">bank_desc = #{bankDesc},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where bank_id = #{bankId}
    </update>

    <delete id="deleteQuestionBankByBankId" parameterType="Long">
        delete from question_bank where bank_id = #{bankId}
    </delete>

    <delete id="deleteQuestionBankByBankIds" parameterType="String">
        delete from question_bank where bank_id in 
        <foreach item="bankId" collection="array" open="(" separator="," close=")">
            #{bankId}
        </foreach>
    </delete>
</mapper>